"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.make = void 0;
var sass = require("sass");
var make = function (data, options) {
    var self = this;
    var themeCfg = self.theme.config || {};
    // support global and theme-specific config
    var userConfig = Object.assign(themeCfg.node_sass || {}, self.config.node_sass || {});
    function getProperty(obj, name) {
        name = name.replace(/\[(\w+)]/g, '.$1').replace(/^\./, '');
        var split = name.split('.');
        var key = split.shift();
        if (!obj.hasOwnProperty(key))
            return '';
        if (!key) {
            return '';
        }
        var result = obj[key];
        var len = split.length;
        if (!len)
            return result || '';
        if (typeof result !== 'object')
            return '';
        for (var i = 0; i < len; i++) {
            key = split[i];
            if (!result.hasOwnProperty(key))
                return '';
            result = result[split[i]];
            if (typeof result !== 'object')
                return result;
        }
        return result;
    }
    var config = Object.assign(this.theme.config.sass || {}, this.config.sass || {}, { file: data.path }, {
        functions: {
            'hexo-theme-config($ckey)': function (ckey) {
                var val = getProperty(themeCfg, ckey.getValue()), sassVal = new sass.types.String(val);
                if (userConfig.debug) {
                    console.log('hexo-theme-config.' + ckey.getValue(), val);
                }
                return sassVal;
            },
            'hexo-config($ckey)': function (ckey) {
                var val = getProperty(self.config, ckey.getValue()), sassVal = new sass.types.String(val);
                if (userConfig.debug) {
                    console.log('hexo-config.' + ckey.getValue(), val);
                }
                return sassVal;
            },
        },
    });
    return new Promise(function (resolve, reject) {
        sass.render(config, function (err, result) {
            if (err) {
                reject(err);
                return;
            }
            if (result) {
                resolve(result.css.toString());
            }
        });
    });
};
exports.make = make;
