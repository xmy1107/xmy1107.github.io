<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>KaTeX 渲染测试</title>
    <!-- 引入 KaTeX -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css">
    <script src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js"></script>
    <!-- 引入 marked.js 和 DOMPurify -->
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/dompurify@2.4.0/dist/purify.min.js"></script>
</head>
<body>
    <div id="responseBox" style="margin: 20px; font-size: 16px; color: #333;"></div>

    <script>
        window.onload = function () {
            const responseBox = document.getElementById("responseBox");

            // GPT 返回内容（包含数学公式和 Markdown 格式）
            const gptResponse = `
**这是标题**

这是一个行内公式：\\( x^2 + y^2 = z^2 \\)

这是一个块级公式：
\\[
\\int_0^1 x^2 \\, dx = \\frac{1}{3}
\\]
`;

            try {
                // 1. 提前替换数学公式为占位符，避免被 marked 破坏
                const placeholder = '%%MATH_FORMULA%%';
                let mathBlocks = [];
                const preprocessedResponse = gptResponse.replace(/\\\[([^\]]+)\\\]|\\\(([^\)]+)\\\)/g, (match) => {
                    mathBlocks.push(match);
                    return placeholder;
                });

                // 2. 使用 marked 渲染 Markdown
                const renderedHTML = marked.parse(preprocessedResponse);

                // 3. 替换回原始数学公式
                let finalHTML = renderedHTML;
                mathBlocks.forEach((math, i) => {
                    finalHTML = finalHTML.replace(placeholder, math);
                });

                // 4. 安全地插入 HTML
                responseBox.innerHTML = DOMPurify.sanitize(finalHTML);

                // 5. 渲染数学公式
                renderMathInElement(responseBox, {
                    delimiters: [
                        { left: "\\(", right: "\\)", display: false }, // 行内公式
                        { left: "\\[", right: "\\]", display: true }  // 块级公式
                    ],
                    throwOnError: false
                });

                console.log("KaTeX 渲染完成...");
            } catch (error) {
                console.error("渲染失败:", error.message);
                responseBox.innerText = "数学公式渲染失败，请检查代码或公式格式。";
            }
        };
    </script>
</body>
</html>
