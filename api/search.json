[{"id":"a43501af752cd97a928bbdf7b9795fd7","title":"2024年度总结","content":"Part 1: ACM\n比赛\n去各地比赛的地图，标签可拖动\n网页里写的很全了，我文字也写一下吧，中间有很多坎坷，也有很多心路历程，但已经在别处记录过了，就不再赘述\n2024年4月，团体程序设计天梯赛二等奖\n2024年4月，浙江省大学生程序设计竞赛季军\n2024年5月，河南省大学生程序设计竞赛第六名\n2024年5月，山东省大学生程序设计竞赛季军\n2024年5月，北京市大学生程序设计竞赛银奖\n2024年10月，全国大学生程序设计竞赛哈尔滨站银奖\n2024年11月，国际大学生程序设计竞赛南京站金奖\n2024年11月，全国大学生程序设计竞赛重庆站季军（与PKU随机匹配在榜单上并列第二，仅罚时多两秒，人生高光时刻）\n\n2024年11月，国际大学生程序设计竞赛上海站银奖\n出题&amp;验题\n今年在内蒙省赛、杭电多校、校新生赛上各出了一道题，帮雄哥小验了一下广西省赛（就验了一道，但也算验题人是吧，简历里都是可以写的）。\n内蒙省赛用的是我初一出的一道题，完全没改动，没想到全省只有两个队过。悄咪咪说一句，我不打acm的室友都做出来了，只不过用的矩阵快速幂，还有一些繁琐的步骤。std直接一个式子结束。\n\n我着重讲一下杭电多校出的那道题吧，出完这道题的时候我整个人都惊了，这种难度的题我自己都很少很少能做出来，结果竟然被我出出来了。并且幸亏一队在验题的时候验出我题目的错误，不然就是丢大人了，而不是光辉事迹。\n给大家看一下战绩：\n全国打杭电多校的大学生队伍就四个队做出来，三支是PKU，高中生的话多俩杭二和南外的队伍。我何德何能啊。\n\n题目： 且  ，求有序数对  数量，答案对取模\n插播一下题目的加强过程。开始没有幂次，且x只有三个，我用容斥做的，交给林圣的时候被他用莫反秒了，并且表示大概率有原。后来OEIS上查到了。。。之后加强成x可以有k个，但依旧没有幂次，此时要用上min25筛了。再后来发现加上一个幂次后状态数很有限，用多重背包预处理方案数即可（我用了dfs+多重背包+组合数，看了他们的代码才发现想复杂了）。\n题解：令表示 且  数对数量，，则答案为\n等价于每个质因子在中次数的最小值都是0，易知各个质因子之间独立，为积性函数，问题在于怎么求\n时，等价于将划分给个数，第i个数必须是的倍数，且个数里至少有一个为的方案数\n用至多不超过的时间dfs（，中c的取值小于等于33）预处理，可以得出结果\n，其中是中1的数量，p只有1次，只能是1的倍数\n此时发现为关于的零次多项式，可快速求，可用min25筛快速求得\n时间复杂度，此时在情况下都没有问题\n考虑枚举某个集合的元素均为0，剩余部分形如2w+2x+3y+4z=c（w,x,y,z&gt;=1）\n如果已知2x+3y+4z在每个c处的方案数，那么可以的时间内推出2w+2x+3y+4z=c在每个c处的方案数\n发现对于值相同的，性质是一样的，可以直接用这个值有几个来代替，不需要枚举，加上一些剪枝，可以通过的数据\nPart 2: 数模\n美赛的名额是靠acm金软磨硬泡出来的，训了两次就正式比赛了，拿了M奖非常的意料之外，因为之前只在新生赛做过一次数模，就一个成功参赛奖。跟她俩确实也学到很多数模的经验。但打完以后，我可以说就出师了，要学的东西很少，或者说都是可以现学的。\n有了美赛的经历，加上周慧的鼓动，还有我需要保研的特推名额等种种因素，让我决定打国赛。软膜硬泡*2，训练三次即可打国赛。王景煜是个特别强的队友，文本、建模、代码都很顶级，只可惜周慧这货纯傻逼，之前打美赛根本没看清这个人，这直接导致最后只拿到了国二。\n通过聊天记录说明一下国二的原因吧\n  \n控诉一下周慧的n宗罪：完全听不懂我们的建模瞎出主意、二维的题目直接拿GPT生成三维的模型用、比赛期间游戏打到凌晨五点早上不来做题、问题复述都写不端正、没事干就在旁边打游戏干扰我们、抄个数据抄错了还是王景煜找出来的错误……但凡她有点正贡献，给我省下三四个小时的时间，我所有代码的变步长搜索的手动调参都可以改成自动调参，这也是我本来就要改的东西。她这些行为直接导致所有文本建模都是王景煜一人完成的，代码和结果都是我完成的，而且独立运作，到提交我都没有细看过一遍论文。\n \n国赛成绩在中国大学生助手中查询\nPart 3: 一些不算项目的项目或未完成的项目\n华为嵌入式软件大赛\n初赛交了个输出0的代码，结果直接进复赛了。但我真没想好好打复赛，练习赛就草草写了个还跑不出的代码就去杭研所了，没想到最后跑出来了，还跑了22w分，第六名。一共开放了三个月的时间大概，我就做了一个下午+一晚上+比赛的五个小时就第六了，真是意外。\n三维重建\n题目就是给定rgb图、深度图和相机内参，重建模型和渲染。\n主要靠的龙哥和慧源。但我该做的也都做了，nerf跟着跑了，sam分割图像部分我做了，还做了个手动标点的小工具。但最后就19名，也没成果产出，用的都是开源的东西，似乎也不好放进简历，算是个小锻炼吧。\n微表面建模\n在做\nPart 4: 一些零零散散的小收获\n健身\n体重从120增到了140，能稍微看出点肌肉了（但还是细狗一只，慢慢练吧，手有缺陷，强度大会痛）。体测的时候引体硬拉15个，立定跳远2.80，还挺满意的。\n唱歌\n基本功一直不大扎实，且不大学的会（真的已经努力了，还花了小两千买线上课自己学，真学不会），所以干脆退了合唱队的训练群，自己瞎练。还真给我练出点东西来了。\nHigh D, 不是假音哦\n然后3.24看了张杰演唱会上海站，5月123场外看了两场演唱会。张杰的唱过的歌我现在至少会唱一百首！\n邓紫棋演唱会todo\n双放手\n双放手录的视频不多，只能放一下这个有点丢人的了\n双放手录视频+唱歌，九十度弯摔了\n汇报\n进行了国奖答辩、科创先锋、笃学模范、青年领英的答辩，颇有收获，知道了汇报的重心、评奖的机制和其核心要领等等（不细讲了，这部分就写给自己看一下），希望明年能汲取今年积累的经验，百战百胜。\n一些更没用的小玩意儿\n比如上面用高德api做的地图、比如搭了博客（虽然都用的别的人东西，但对我这个小白来讲还是新学了不少东西的）、比如装机\n化妆会了一捏捏，但从来不用，或者说只有不见人的时候才会自己玩玩。双眼皮贴会贴了，直板夹能稍微夹出点纹理，素颜霜会涂，知道化妆的流程，所以也没很卡粉，还能消黑眼圈和遮痘印。\n","slug":"2024年度总结","date":"2024-12-09T08:30:10.000Z","categories_index":"","tags_index":"杂","author_index":"蜗角虚名羊"},{"id":"f3e053b17563d4376eb93323aa914ede","title":"搭建过程记录","content":"hexo官方文档\n以下是自己的搭建过程（包括怎么git）：\n1. 建立名为 username.github.io的储存库\n2. first commit\n123456789(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~$ mkdir blog(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~$ cd blog(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ hexo initINFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.gitINFO  Install dependenciesINFO  Start blogging with Hexo!(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$  git push -u origin mainfatal: 不是 git 仓库（或者直至挂载点 / 的任何父目录）停止在文件系统边界（未设置 GIT_DISCOVERY_ACROSS_FILESYSTEM）。\n完全按hexo步骤来会在这步卡住，因为git仓库都没有初始化\n1234567891011(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ echo &quot;# xmy1107.github.io&quot; &gt;&gt; README.md（这里漏了git init，这个记得输入）(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git add README.md(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git commit -m &quot;first commit&quot;[main （根提交） 8956e78] first commit 1 file changed, 1 insertion(+) create mode 100644 README.md(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote add origin https://github.com/xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push -u origin mainUsername for &#x27;https://github.com&#x27;: xmy1107Password for &#x27;https://xmy1107@github.com&#x27;: \n这里初始化并进行第一次提交以后就建站成功了。注意password不是你用户的密码，而是personal access token。如果是ssh连接就是这样（我用PAT能登进去，但每次都要重新输入，但用ssh在把公钥放进去以后不用这样，就用ssh了）：\n12345678910111213(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote get-url originhttps://github.com/xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote set-url origin git@github.com:xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote get-url origingit@github.com:xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push -u origin main枚举对象中: 3, 完成.对象计数中: 100% (3/3), 完成.写入对象中: 100% (3/3), 227 字节 | 227.00 KiB/s, 完成.总共 3（差异 0），复用 0（差异 0），包复用 0To github.com:xmy1107/xmy1107.github.io.git * [new branch]      main -&gt; main分支 &#x27;main&#x27; 设置为跟踪 &#x27;origin/main&#x27;。\n然后在 https://xmy1107.github.io/ 下就有一个空的网页：\n\nps：PAT想要不每次输密码可以尝试\nvim ~/.gitconfig后输入以下内容（虽然我没成功）\n1234567[init]        defaultBranch = main[user]        name =         email = [github]        token = \n3. 网站正式建立\n上面是因为只push了一个README，下面对github工作流配置后再次push可以得到”正常“的一个网页\n\n\n使用 node --version 指令检查你电脑上的 Node.js 版本。 记下主要版本（我是v20.17.0）\n\n\n在储存库中前往 Settings &gt; Pages &gt; Source 。 将 source 更改为 GitHub Actions，然后保存。\n\n\n在储存库中建立 .github/workflows/pages.yml，并填入以下内容 (将 20 替换为上个步骤中记下的版本)：\n\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950.github/workflows/pages.ymlname: Pageson:  push:    branches:      - main # default branchjobs:  build:    runs-on: ubuntu-latest    steps:      - uses: actions/checkout@v4        with:          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;          # If your repository depends on submodule, please see: https://github.com/actions/checkout          submodules: recursive      - name: Use Node.js 20        uses: actions/setup-node@v4        with:          # Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node          # Ref: https://github.com/actions/setup-node#supported-version-syntax          node-version: &quot;20&quot;      - name: Cache NPM dependencies        uses: actions/cache@v4        with:          path: node_modules          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache          restore-keys: |            $&#123;&#123; runner.OS &#125;&#125;-npm-cache      - name: Install Dependencies        run: npm install      - name: Build        run: npm run build      - name: Upload Pages artifact        uses: actions/upload-pages-artifact@v3        with:          path: ./public  deploy:    needs: build    permissions:      pages: write      id-token: write    environment:      name: github-pages      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;    runs-on: ubuntu-latest    steps:      - name: Deploy to GitHub Pages        id: deployment        uses: actions/deploy-pages@v4\n这个过程相当于hexo generate和hexo deploy，区别是在git push时才执行，然后用github工作流完成渲染和部署。\n这一步结束后重新打开博客便是如下页面：\n\n\n部署完成后，前往 username.github.io/repository 查看网页。\n\n4.一键部署\n\n安装 hexo-deployer-git，即输入npm install hexo-deployer-git --save\n在 _config.yml 中添加以下配置（如果配置已经存在，请将其替换为如下）:\n\n1234567deploy:  type: git  repo: https://github.com/&lt;username&gt;/&lt;project&gt;  # example, https://github.com/hexojs/hexojs.github.io  # 我这里是git@github.com:xmy1107/xmy1107.github.io.git，因为我是ssh连接的  # git@github.com:xmy1107/blog.git是项目页面  branch: main # hexo给的是gh-pages，无所谓\n\n这里要把网站建立中GitHub Actions改回Deploy from a branch，因为使用 hexo d 时，它会跳过 GitHub Actions，直接将 public 文件夹中的静态文件推送到 gh-pages 分支。 GitHub Actions对应的操作是git push\n执行 hexo clean &amp;&amp; hexo deploy 。\n浏览 username.github.io，检查你的网站能否运作。\n\n5.后续配置\n主题选用Academia\n改用aurora\n6.aurora\n见doc\n7.一些自己写博客的注意点\n贴html用相对路径：[去各地比赛的地图，标签可拖动](/map_html/index.html)\n贴图片用绝对路径：![image-20240925134647445](搭建过程记录/image-20240925134647445.png)，便于显示\n\nhtml文件要禁止渲染，默认会渲染并且放进page目录中。需要在config中加入以下配置：\n12skip_render:  htmls/**/*.html\n要放进地址栏的部分得用英文字符，但只是文件链接就不用\n[双放手录视频+唱歌，九十度弯摔了](/htmls/双放手.html)\nhtml文件中是\n1234&lt;video controls width=&quot;500&quot;&gt;    &lt;source src=&quot;/videos/shuangfangshou.mp4&quot; type=&quot;video/mp4&quot;&gt;    您的浏览器不支持视频标签。&lt;/video&gt;\nhexo s后台运行：\n\n8.TODO LIST\nmarkdown无法正常显示\n没搞清楚的部分\n项目页面（这部分没完全搞清楚）\n\n导航到 GitHub 上的存储库。 转到 Settings 选项卡。 建立名为 &lt;repository 的名字&gt; 的储存库，这样你的博客网址为 &lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;，repository 的名字可以任意，例如 blog 或 hexo。\n编辑你的 _config.yml，将 url: 更改为 &lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;。\n在 GitHub 仓库的设置中，导航至 Settings &gt; Pages &gt; Source 。 将 source 更改为 GitHub Actions，然后保存。\nCommit 并 push 到默认分支上。\n\n注意这里要修改远程的仓库，需要push到新建的那个仓库中\n1234567891011121314151617181920212223242526(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote set-url origin git@github.com:xmy1107/blog.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote -vorigin\tgit@github.com:xmy1107/blog.git (fetch)origin\tgit@github.com:xmy1107/blog.git (push)(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git add .(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git status位于分支 main您的分支与上游分支 &#x27;origin/main&#x27; 一致。要提交的变更：  （使用 &quot;git restore --staged &lt;文件&gt;...&quot; 以取消暂存）\t修改：     _config.yml(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git commit -m &quot;first commit&quot;[main fa6cdc7] first commit 1 file changed, 1 insertion(+), 1 deletion(-)(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push枚举对象中: 30, 完成.对象计数中: 100% (30/30), 完成.使用 16 个线程进行压缩压缩对象中: 100% (19/19), 完成.写入对象中: 100% (30/30), 31.32 KiB | 3.48 MiB/s, 完成.总共 30（差异 3），复用 0（差异 0），包复用 0remote: Resolving deltas: 100% (3/3), done.To github.com:xmy1107/blog.git * [new branch]      main -&gt; main","slug":"搭建过程记录","date":"2024-11-07T03:07:08.000Z","categories_index":"","tags_index":"杂","author_index":"蜗角虚名羊"}]