[{"id":"a43501af752cd97a928bbdf7b9795fd7","title":"2024年度总结","content":"Part 1: ACM\nmap\nPart 2: 数模\nPart 3: 一些不算项目的项目或未完成的项目\nPart 4: 外貌\n健身\nPart 5: 唱歌\nPart 6: 一些别的小收获\n装机 双放手 汇报\n","slug":"2024年度总结","date":"2024-12-09T08:30:10.000Z","categories_index":"","tags_index":"","author_index":"蜗角虚名羊"},{"id":"f3e053b17563d4376eb93323aa914ede","title":"搭建过程记录","content":"hexo官方文档\n以下是自己的搭建过程（包括怎么git）：\n1. 建立名为 username.github.io的储存库\n2. first commit\n123456789(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~$ mkdir blog(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~$ cd blog(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ hexo initINFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.gitINFO  Install dependenciesINFO  Start blogging with Hexo!(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$  git push -u origin mainfatal: 不是 git 仓库（或者直至挂载点 / 的任何父目录）停止在文件系统边界（未设置 GIT_DISCOVERY_ACROSS_FILESYSTEM）。\n完全按hexo步骤来会在这步卡住，因为git仓库都没有初始化\n1234567891011(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ echo &quot;# xmy1107.github.io&quot; &gt;&gt; README.md（这里漏了git init，这个记得输入）(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git add README.md(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git commit -m &quot;first commit&quot;[main （根提交） 8956e78] first commit 1 file changed, 1 insertion(+) create mode 100644 README.md(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote add origin https://github.com/xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push -u origin mainUsername for &#x27;https://github.com&#x27;: xmy1107Password for &#x27;https://xmy1107@github.com&#x27;: \n这里初始化并进行第一次提交以后就建站成功了。注意password不是你用户的密码，而是personal access token。如果是ssh连接就是这样（我用PAT能登进去，但每次都要重新输入，但用ssh在把公钥放进去以后不用这样，就用ssh了）：\n12345678910111213(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote get-url originhttps://github.com/xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote set-url origin git@github.com:xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote get-url origingit@github.com:xmy1107/xmy1107.github.io.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push -u origin main枚举对象中: 3, 完成.对象计数中: 100% (3/3), 完成.写入对象中: 100% (3/3), 227 字节 | 227.00 KiB/s, 完成.总共 3（差异 0），复用 0（差异 0），包复用 0To github.com:xmy1107/xmy1107.github.io.git * [new branch]      main -&gt; main分支 &#x27;main&#x27; 设置为跟踪 &#x27;origin/main&#x27;。\n然后在 https://xmy1107.github.io/ 下就有一个空的网页：\n\nps：PAT想要不每次输密码可以尝试\nvim ~/.gitconfig后输入以下内容（虽然我没成功）\n1234567[init]        defaultBranch = main[user]        name =         email = [github]        token = \n3. 网站正式建立\n上面是因为只push了一个README，下面对github工作流配置后再次push可以得到”正常“的一个网页\n\n\n使用 node --version 指令检查你电脑上的 Node.js 版本。 记下主要版本（我是v20.17.0）\n\n\n在储存库中前往 Settings &gt; Pages &gt; Source 。 将 source 更改为 GitHub Actions，然后保存。\n\n\n在储存库中建立 .github/workflows/pages.yml，并填入以下内容 (将 20 替换为上个步骤中记下的版本)：\n\n\n1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950.github/workflows/pages.ymlname: Pageson:  push:    branches:      - main # default branchjobs:  build:    runs-on: ubuntu-latest    steps:      - uses: actions/checkout@v4        with:          token: $&#123;&#123; secrets.GITHUB_TOKEN &#125;&#125;          # If your repository depends on submodule, please see: https://github.com/actions/checkout          submodules: recursive      - name: Use Node.js 20        uses: actions/setup-node@v4        with:          # Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node          # Ref: https://github.com/actions/setup-node#supported-version-syntax          node-version: &quot;20&quot;      - name: Cache NPM dependencies        uses: actions/cache@v4        with:          path: node_modules          key: $&#123;&#123; runner.OS &#125;&#125;-npm-cache          restore-keys: |            $&#123;&#123; runner.OS &#125;&#125;-npm-cache      - name: Install Dependencies        run: npm install      - name: Build        run: npm run build      - name: Upload Pages artifact        uses: actions/upload-pages-artifact@v3        with:          path: ./public  deploy:    needs: build    permissions:      pages: write      id-token: write    environment:      name: github-pages      url: $&#123;&#123; steps.deployment.outputs.page_url &#125;&#125;    runs-on: ubuntu-latest    steps:      - name: Deploy to GitHub Pages        id: deployment        uses: actions/deploy-pages@v4\n这个过程相当于hexo generate和hexo deploy，区别是在git push时才执行，然后用github工作流完成渲染和部署。\n这一步结束后重新打开博客便是如下页面：\n\n\n部署完成后，前往 username.github.io/repository 查看网页。\n\n5.一键部署\n\n安装 hexo-deployer-git，即输入npm install hexo-deployer-git --save\n在 _config.yml 中添加以下配置（如果配置已经存在，请将其替换为如下）:\n\n1234567deploy:  type: git  repo: https://github.com/&lt;username&gt;/&lt;project&gt;  # example, https://github.com/hexojs/hexojs.github.io  # 我这里是git@github.com:xmy1107/xmy1107.github.io.git，因为我是ssh连接的  # git@github.com:xmy1107/blog.git是项目页面  branch: main # hexo给的是gh-pages，无所谓\n\n这里要把网站建立中GitHub Actions改回Deploy from a branch，因为使用 hexo d 时，它会跳过 GitHub Actions，直接将 public 文件夹中的静态文件推送到 gh-pages 分支。 GitHub Actions对应的操作是git push\n执行 hexo clean &amp;&amp; hexo deploy 。\n浏览 username.github.io，检查你的网站能否运作。\n\n6.后续配置\n主题选用Academia\n改用aurora\n7.aurora\n见doc\n没搞清楚的部分\n项目页面（这部分没完全搞清楚）\n\n导航到 GitHub 上的存储库。 转到 Settings 选项卡。 建立名为 &lt;repository 的名字&gt; 的储存库，这样你的博客网址为 &lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;，repository 的名字可以任意，例如 blog 或 hexo。\n编辑你的 _config.yml，将 url: 更改为 &lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;。\n在 GitHub 仓库的设置中，导航至 Settings &gt; Pages &gt; Source 。 将 source 更改为 GitHub Actions，然后保存。\nCommit 并 push 到默认分支上。\n\n注意这里要修改远程的仓库，需要push到新建的那个仓库中\n1234567891011121314151617181920212223242526(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote set-url origin git@github.com:xmy1107/blog.git(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote -vorigin\tgit@github.com:xmy1107/blog.git (fetch)origin\tgit@github.com:xmy1107/blog.git (push)(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git add .(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git status位于分支 main您的分支与上游分支 &#x27;origin/main&#x27; 一致。要提交的变更：  （使用 &quot;git restore --staged &lt;文件&gt;...&quot; 以取消暂存）\t修改：     _config.yml(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git commit -m &quot;first commit&quot;[main fa6cdc7] first commit 1 file changed, 1 insertion(+), 1 deletion(-)(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push枚举对象中: 30, 完成.对象计数中: 100% (30/30), 完成.使用 16 个线程进行压缩压缩对象中: 100% (19/19), 完成.写入对象中: 100% (30/30), 31.32 KiB | 3.48 MiB/s, 完成.总共 30（差异 3），复用 0（差异 0），包复用 0remote: Resolving deltas: 100% (3/3), done.To github.com:xmy1107/blog.git * [new branch]      main -&gt; main","slug":"搭建过程记录","date":"2024-09-25T07:38:51.661Z","categories_index":"","tags_index":"","author_index":"蜗角虚名羊"}]