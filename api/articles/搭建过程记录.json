{"title":"搭建过程记录","uid":"f3e053b17563d4376eb93323aa914ede","slug":"搭建过程记录","date":"2024-09-25T07:38:51.661Z","updated":"2024-12-10T09:33:56.358Z","comments":true,"path":"api/articles/搭建过程记录.json","keywords":null,"cover":[],"content":"<p><a href=\"https://hexo.io/zh-cn/docs/\">hexo官方文档</a></p>\n<p>以下是自己的搭建过程（包括怎么git）：</p>\n<h3 id=\"1-建立名为-username-github-io的储存库\">1. 建立名为 <strong><a href=\"http://username.github.io\">username.github.io</a></strong>的储存库</h3>\n<h3 id=\"2-first-commit\">2. first commit</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~$ <span class=\"built_in\">mkdir</span> blog</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~$ <span class=\"built_in\">cd</span> blog</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ hexo init</span><br><span class=\"line\">INFO  Cloning hexo-starter https://github.com/hexojs/hexo-starter.git</span><br><span class=\"line\">INFO  Install dependencies</span><br><span class=\"line\">INFO  Start blogging with Hexo!</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$  git push -u origin main</span><br><span class=\"line\">fatal: 不是 git 仓库（或者直至挂载点 / 的任何父目录）</span><br><span class=\"line\">停止在文件系统边界（未设置 GIT_DISCOVERY_ACROSS_FILESYSTEM）。</span><br></pre></td></tr></table></figure>\n<p>完全按hexo步骤来会在这步卡住，因为git仓库都没有初始化</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ <span class=\"built_in\">echo</span> <span class=\"string\">&quot;# xmy1107.github.io&quot;</span> &gt;&gt; README.md</span><br><span class=\"line\">（这里漏了git init，这个记得输入）</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git add README.md</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">[main （根提交） 8956e78] first commit</span><br><span class=\"line\"> 1 file changed, 1 insertion(+)</span><br><span class=\"line\"> create mode 100644 README.md</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote add origin https://github.com/xmy1107/xmy1107.github.io.git</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push -u origin main</span><br><span class=\"line\">Username <span class=\"keyword\">for</span> <span class=\"string\">&#x27;https://github.com&#x27;</span>: xmy1107</span><br><span class=\"line\">Password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;https://xmy1107@github.com&#x27;</span>: </span><br></pre></td></tr></table></figure>\n<p>这里初始化并进行第一次提交以后就建站成功了。注意password不是你用户的密码，而是personal access token。如果是ssh连接就是这样（我用PAT能登进去，但每次都要重新输入，但用ssh在把公钥放进去以后不用这样，就用ssh了）：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote get-url origin</span><br><span class=\"line\">https://github.com/xmy1107/xmy1107.github.io.git</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote set-url origin git@github.com:xmy1107/xmy1107.github.io.git</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote get-url origin</span><br><span class=\"line\">git@github.com:xmy1107/xmy1107.github.io.git</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push -u origin main</span><br><span class=\"line\">枚举对象中: 3, 完成.</span><br><span class=\"line\">对象计数中: 100% (3/3), 完成.</span><br><span class=\"line\">写入对象中: 100% (3/3), 227 字节 | 227.00 KiB/s, 完成.</span><br><span class=\"line\">总共 3（差异 0），复用 0（差异 0），包复用 0</span><br><span class=\"line\">To github.com:xmy1107/xmy1107.github.io.git</span><br><span class=\"line\"> * [new branch]      main -&gt; main</span><br><span class=\"line\">分支 <span class=\"string\">&#x27;main&#x27;</span> 设置为跟踪 <span class=\"string\">&#x27;origin/main&#x27;</span>。</span><br></pre></td></tr></table></figure>\n<p>然后在 <strong><a href=\"https://xmy1107.github.io/\">https://xmy1107.github.io/</a></strong> 下就有一个空的网页：</p>\n<p><img src=\"%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20240925132827002.png\" alt=\"image-20240925132827002\"></p>\n<p>ps：PAT想要不每次输密码可以尝试</p>\n<p><code>vim ~/.gitconfig</code>后输入以下内容（虽然我没成功）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[init]</span><br><span class=\"line\">        defaultBranch = main</span><br><span class=\"line\">[user]</span><br><span class=\"line\">        name = </span><br><span class=\"line\">        email = </span><br><span class=\"line\">[github]</span><br><span class=\"line\">        token = </span><br></pre></td></tr></table></figure>\n<h3 id=\"3-网站正式建立\">3. 网站正式建立</h3>\n<p>上面是因为只push了一个README，下面对github工作流配置后再次push可以得到”正常“的一个网页</p>\n<ol>\n<li>\n<p>使用 <code>node --version</code> 指令检查你电脑上的 Node.js 版本。 记下主要版本（我是<code>v20.17.0</code>）</p>\n</li>\n<li>\n<p>在储存库中前往 <strong>Settings</strong> &gt; <strong>Pages</strong> &gt; <strong>Source</strong> 。 将 source 更改为 <strong>GitHub Actions</strong>，然后保存。</p>\n</li>\n<li>\n<p>在储存库中建立 <code>.github/workflows/pages.yml</code>，并填入以下内容 (将 <code>20</code> 替换为上个步骤中记下的版本)：</p>\n</li>\n</ol>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">.github/workflows/pages.ymlname:</span> <span class=\"string\">Pages</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">on:</span></span><br><span class=\"line\">  <span class=\"attr\">push:</span></span><br><span class=\"line\">    <span class=\"attr\">branches:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">main</span> <span class=\"comment\"># default branch</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">jobs:</span></span><br><span class=\"line\">  <span class=\"attr\">build:</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">uses:</span> <span class=\"string\">actions/checkout@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">token:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">secrets.GITHUB_TOKEN</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">          <span class=\"comment\"># If your repository depends on submodule, please see: https://github.com/actions/checkout</span></span><br><span class=\"line\">          <span class=\"attr\">submodules:</span> <span class=\"string\">recursive</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Use</span> <span class=\"string\">Node.js</span> <span class=\"number\">20</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/setup-node@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"comment\"># Examples: 20, 18.19, &gt;=16.20.2, lts/Iron, lts/Hydrogen, *, latest, current, node</span></span><br><span class=\"line\">          <span class=\"comment\"># Ref: https://github.com/actions/setup-node#supported-version-syntax</span></span><br><span class=\"line\">          <span class=\"attr\">node-version:</span> <span class=\"string\">&quot;20&quot;</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Cache</span> <span class=\"string\">NPM</span> <span class=\"string\">dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/cache@v4</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">node_modules</span></span><br><span class=\"line\">          <span class=\"attr\">key:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">runner.OS</span> <span class=\"string\">&#125;&#125;-npm-cache</span></span><br><span class=\"line\">          <span class=\"attr\">restore-keys:</span> <span class=\"string\">|</span></span><br><span class=\"line\"><span class=\"string\">            $&#123;&#123; runner.OS &#125;&#125;-npm-cache</span></span><br><span class=\"line\"><span class=\"string\"></span>      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Install</span> <span class=\"string\">Dependencies</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">install</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Build</span></span><br><span class=\"line\">        <span class=\"attr\">run:</span> <span class=\"string\">npm</span> <span class=\"string\">run</span> <span class=\"string\">build</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Upload</span> <span class=\"string\">Pages</span> <span class=\"string\">artifact</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/upload-pages-artifact@v3</span></span><br><span class=\"line\">        <span class=\"attr\">with:</span></span><br><span class=\"line\">          <span class=\"attr\">path:</span> <span class=\"string\">./public</span></span><br><span class=\"line\">  <span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">needs:</span> <span class=\"string\">build</span></span><br><span class=\"line\">    <span class=\"attr\">permissions:</span></span><br><span class=\"line\">      <span class=\"attr\">pages:</span> <span class=\"string\">write</span></span><br><span class=\"line\">      <span class=\"attr\">id-token:</span> <span class=\"string\">write</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span></span><br><span class=\"line\">      <span class=\"attr\">name:</span> <span class=\"string\">github-pages</span></span><br><span class=\"line\">      <span class=\"attr\">url:</span> <span class=\"string\">$&#123;&#123;</span> <span class=\"string\">steps.deployment.outputs.page_url</span> <span class=\"string\">&#125;&#125;</span></span><br><span class=\"line\">    <span class=\"attr\">runs-on:</span> <span class=\"string\">ubuntu-latest</span></span><br><span class=\"line\">    <span class=\"attr\">steps:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"attr\">name:</span> <span class=\"string\">Deploy</span> <span class=\"string\">to</span> <span class=\"string\">GitHub</span> <span class=\"string\">Pages</span></span><br><span class=\"line\">        <span class=\"attr\">id:</span> <span class=\"string\">deployment</span></span><br><span class=\"line\">        <span class=\"attr\">uses:</span> <span class=\"string\">actions/deploy-pages@v4</span></span><br></pre></td></tr></table></figure>\n<p>这个过程相当于<code>hexo generate</code>和<code>hexo deploy</code>，区别是在<code>git push</code>时才执行，然后用github工作流完成渲染和部署。</p>\n<p>这一步结束后重新打开博客便是如下页面：</p>\n<p><img src=\"%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/image-20240925134647445.png\" alt=\"image-20240925134647445\"></p>\n<ol start=\"5\">\n<li>部署完成后，前往 <em>username</em>.github.io/<em>repository</em> 查看网页。</li>\n</ol>\n<h3 id=\"5-一键部署\">5.一键部署</h3>\n<ol>\n<li>安装 <a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a>，即输入<code>npm install hexo-deployer-git --save</code></li>\n<li>在 <code>_config.yml</code> 中添加以下配置（如果配置已经存在，请将其替换为如下）:</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/&lt;username&gt;/&lt;project&gt;</span><br><span class=\"line\">  # example, https://github.com/hexojs/hexojs.github.io</span><br><span class=\"line\">  # 我这里是git@github.com:xmy1107/xmy1107.github.io.git，因为我是ssh连接的</span><br><span class=\"line\">  # git@github.com:xmy1107/blog.git是项目页面</span><br><span class=\"line\">  branch: main # hexo给的是gh-pages，无所谓</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>这里要把网站建立中<strong>GitHub Actions</strong>改回<strong>Deploy from a branch</strong>，因为使用 <code>hexo d</code> 时，它会跳过 GitHub Actions，直接将 <code>public</code> 文件夹中的静态文件推送到 <code>gh-pages</code> 分支。 GitHub Actions对应的操作是<code>git push</code></li>\n<li>执行 <code>hexo clean &amp;&amp; hexo deploy</code> 。</li>\n<li>浏览 <em>username</em>.github.io，检查你的网站能否运作。</li>\n</ol>\n<h3 id=\"6-后续配置\">6.后续配置</h3>\n<p>主题选用<a href=\"https://github.com/PhosphorW/hexo-theme-academia\">Academia</a></p>\n<p>改用<a href=\"https://github.com/auroral-ui/hexo-theme-aurora\">aurora</a></p>\n<h3 id=\"7-aurora\">7.aurora</h3>\n<p>见<a href=\"https://aurora.tridiamond.tech/cn/guide/getting-started.html\">doc</a></p>\n<h3 id=\"8-一些自己写博客的注意点\">8.一些自己写博客的注意点</h3>\n<p>贴html用相对路径：<code>[去各地比赛的地图，标签可拖动](/map_html/index.html)</code></p>\n<p>贴图片用绝对路径：<code>![image-20240925134647445](搭建过程记录/image-20240925134647445.png)</code>，便于显示</p>\n<p><img src=\"%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/QQ20241209-231620.png\" alt=\"本地的目录，供以后参考\"></p>\n<p>html文件要禁止渲染，默认会渲染并且放进page目录中。需要在config中加入以下配置：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">skip_render:</span><br><span class=\"line\">  htmls/**/*.html</span><br></pre></td></tr></table></figure>\n<p>要放进地址栏的部分得用英文字符，但只是文件链接就不用</p>\n<p><code>[双放手录视频+唱歌，九十度弯摔了](/htmls/双放手.html)</code></p>\n<p>html文件中是</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">video</span> <span class=\"attr\">controls</span> <span class=\"attr\">width</span>=<span class=\"string\">&quot;500&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">source</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/videos/shuangfangshou.mp4&quot;</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;video/mp4&quot;</span>&gt;</span></span><br><span class=\"line\">    您的浏览器不支持视频标签。</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">video</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>hexo s后台运行：</p>\n<p><img src=\"./%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E8%AE%B0%E5%BD%95/houtai.png\" alt=\"\"></p>\n<h1>没搞清楚的部分</h1>\n<h3 id=\"项目页面（这部分没完全搞清楚）\">项目页面（这部分没完全搞清楚）</h3>\n<ol>\n<li>导航到 GitHub 上的存储库。 转到 <strong>Settings</strong> 选项卡。 建立名为 <code>&lt;repository 的名字&gt;</code> 的储存库，这样你的博客网址为 <code>&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code>，repository 的名字可以任意，例如 blog 或 hexo。</li>\n<li>编辑你的 <code>_config.yml</code>，将 <code>url:</code> 更改为 <code>&lt;你的 GitHub 用户名&gt;.github.io/&lt;repository 的名字&gt;</code>。</li>\n<li>在 GitHub 仓库的设置中，导航至 <strong>Settings</strong> &gt; <strong>Pages</strong> &gt; <strong>Source</strong> 。 将 source 更改为 <strong>GitHub Actions</strong>，然后保存。</li>\n<li>Commit 并 push 到默认分支上。</li>\n</ol>\n<p>注意这里要修改远程的仓库，需要push到新建的那个仓库中</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote set-url origin git@github.com:xmy1107/blog.git</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git remote -v</span><br><span class=\"line\">origin\tgit@github.com:xmy1107/blog.git (fetch)</span><br><span class=\"line\">origin\tgit@github.com:xmy1107/blog.git (push)</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git add .</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git status</span><br><span class=\"line\">位于分支 main</span><br><span class=\"line\">您的分支与上游分支 <span class=\"string\">&#x27;origin/main&#x27;</span> 一致。</span><br><span class=\"line\"></span><br><span class=\"line\">要提交的变更：</span><br><span class=\"line\">  （使用 <span class=\"string\">&quot;git restore --staged &lt;文件&gt;...&quot;</span> 以取消暂存）</span><br><span class=\"line\">\t修改：     _config.yml</span><br><span class=\"line\"></span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git commit -m <span class=\"string\">&quot;first commit&quot;</span></span><br><span class=\"line\">[main fa6cdc7] first commit</span><br><span class=\"line\"> 1 file changed, 1 insertion(+), 1 deletion(-)</span><br><span class=\"line\">(base) xmy@xmy-Z790M-AORUS-ELITE-AX:~/blog$ git push</span><br><span class=\"line\">枚举对象中: 30, 完成.</span><br><span class=\"line\">对象计数中: 100% (30/30), 完成.</span><br><span class=\"line\">使用 16 个线程进行压缩</span><br><span class=\"line\">压缩对象中: 100% (19/19), 完成.</span><br><span class=\"line\">写入对象中: 100% (30/30), 31.32 KiB | 3.48 MiB/s, 完成.</span><br><span class=\"line\">总共 30（差异 3），复用 0（差异 0），包复用 0</span><br><span class=\"line\">remote: Resolving deltas: 100% (3/3), <span class=\"keyword\">done</span>.</span><br><span class=\"line\">To github.com:xmy1107/blog.git</span><br><span class=\"line\"> * [new branch]      main -&gt; main</span><br></pre></td></tr></table></figure>","text":"hexo官方文档 以下是自己的搭建过程（包括怎么git）： 1. 建立名为 username.github.io的储存库 2. first commit 123...","permalink":"/post/搭建过程记录","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[],"tags":[],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#1-%E5%BB%BA%E7%AB%8B%E5%90%8D%E4%B8%BA-username-github-io%E7%9A%84%E5%82%A8%E5%AD%98%E5%BA%93\"><span class=\"toc-text\">1. 建立名为 username.github.io的储存库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#2-first-commit\"><span class=\"toc-text\">2. first commit</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#3-%E7%BD%91%E7%AB%99%E6%AD%A3%E5%BC%8F%E5%BB%BA%E7%AB%8B\"><span class=\"toc-text\">3. 网站正式建立</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#5-%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2\"><span class=\"toc-text\">5.一键部署</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#6-%E5%90%8E%E7%BB%AD%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">6.后续配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#7-aurora\"><span class=\"toc-text\">7.aurora</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#8-%E4%B8%80%E4%BA%9B%E8%87%AA%E5%B7%B1%E5%86%99%E5%8D%9A%E5%AE%A2%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9\"><span class=\"toc-text\">8.一些自己写博客的注意点</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\"><span class=\"toc-text\">没搞清楚的部分</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E9%A1%B5%E9%9D%A2%EF%BC%88%E8%BF%99%E9%83%A8%E5%88%86%E6%B2%A1%E5%AE%8C%E5%85%A8%E6%90%9E%E6%B8%85%E6%A5%9A%EF%BC%89\"><span class=\"toc-text\">项目页面（这部分没完全搞清楚）</span></a></li></ol>","author":{"name":"蜗角虚名羊","slug":"blog-author","avatar":"/pictures/logo.jpg","link":"/","description":"","socials":{"github":"https://github.com/xmy1107","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/xumingyang0","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"2024年度总结","uid":"a43501af752cd97a928bbdf7b9795fd7","slug":"2024年度总结","date":"2024-12-09T08:30:10.000Z","updated":"2024-12-10T09:29:51.383Z","comments":true,"path":"api/articles/2024年度总结.json","keywords":null,"cover":[],"text":"Part 1: ACM 比赛 去各地比赛的地图，标签可拖动 网页里写的很全了，我文字也写一下吧，中间有很多坎坷，也有很多心路历程，但已经在别处记录过了，就不再赘...","permalink":"/post/2024年度总结","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[],"tags":[],"author":{"name":"蜗角虚名羊","slug":"blog-author","avatar":"/pictures/logo.jpg","link":"/","description":"","socials":{"github":"https://github.com/xmy1107","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/xumingyang0","juejin":"","customs":{}}}},"next_post":{}}